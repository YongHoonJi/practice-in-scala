-FP의 도래
1960년대 OOP가 출현했지만 GUI출현에 맞춰 1980년대에 주류로 들어왔듯이 
FP는 OOP보다 더 오랜 역사를 갖지만 최근에 가지 이슈로 주류로 편입되었다.
첫번째 동시성에 대한 수요이다. 무어의 법칙(CPU 성능 증가에 대한 법칙)가 깨지면서 병렬적 컴퓨팅이 보편화되었고 어플리케이션은
수평적 확장이 필요하게 되었다. 동시성 프로그래밍은 모든 개발자가 알아야될 것이 되었다.
두번째 데이터 중심의 어플리케이션을 작성할 필요가 생김에 따라 데이터 집합을 효율적으로 다루는 기법의 중요성이 부각된다.
세번째 버그가 없는 어플리케이션을 FP가 제공할 수 있다.

- 함수형 프로그래밍
1. 참조 투명성
2. 불변성 : 객체의 복사는 변경이 일어난 부분만 복사되며 나머지는 공유된다. 데이터 노출이나 오염을 통한 버그 방지 
3. 부수효과 : 일부 부수효과가 있을 수 있지만 최소화하여 안정적인 프로그래밍이 탄생
4. 순수함수 
